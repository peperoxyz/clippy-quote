// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String  @id @default(cuid())
  username  String  @unique
  email     String  @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  quotes Quote[]
  bookmarks UserBookmark[]
  likes UserLike[]
}

model Quote {
  id        String @id @default(cuid())
  title     String
  transcript String
  author String?
  resource String?
  countLikes Int @default(0)
  countBookmarks Int @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  // Relations
  userId String
  user User @relation(fields: [userId], references: [id])

  categoryId String
  category Category @relation(fields: [categoryId], references: [id])

  clipId String?
  clip Clip? @relation(fields: [clipId], references: [id])

  bookmarks UserBookmark[]
  likes UserLike[]
}

model UserLike {
  id String @id @default(cuid())
  createdAt DateTime @default(now())

  // Relations
  userId String
  user User @relation(fields: [userId], references: [id])

  quoteId String
  quote Quote @relation(fields: [quoteId], references: [id])

  @@unique([userId, quoteId]) // ensures a user can only like a quote once
}

model UserBookmark {
  id String @id @default(cuid())
  createdAt DateTime @default(now())

  // Relations
  userId String
  user User @relation(fields: [userId], references: [id])

  quoteId String
  quote Quote @relation(fields: [quoteId], references: [id])

  @@unique([userId, quoteId]) // ensures a user can only like a quote once
}

model Category {
  id   String    @id @default(cuid())
  name String    @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  quotes Quote[]
}

model Clip {
  id String @id @default(cuid())
  title String
  youtubeChannelName String
  url String
  embedUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  quotes Quote[]
}